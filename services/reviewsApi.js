// services/reviewsApi.js
import axios from 'axios';
import Cookies from 'js-cookie';

// ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Ç‡∏≠‡∏á axios ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
const createApiInstance = () => {
  const token = Cookies.get('access_token');
  
  const instance = axios.create({
    baseURL: process.env.API_URL, // API Server ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    withCredentials: true,
    timeout: 15000 // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î timeout ‡πÄ‡∏õ‡πá‡∏ô 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  });
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ refresh token
  instance.interceptors.response.use(
    (response) => response,
    async (error) => {
      console.error(`‚ùå API Error: ${error.response?.status} ${error.config?.method?.toUpperCase()} ${error.config?.url}`);
      
      // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 401 Unauthorized ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° refresh
      if (error.response?.status === 401 && !error.config._retry) {
        console.log('üîÑ Attempting to refresh token...');
        error.config._retry = true;
        
        try {
          console.log('üì§ Calling refresh token API...');
          // ‡πÉ‡∏ä‡πâ axios ‡πÅ‡∏¢‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î loop
          const refreshResponse = await axios.post('/api/auth/refresh-token', {}, { 
            withCredentials: true 
          });
          
          console.log('üì• Refresh token response:', refreshResponse.data);
          
          if (refreshResponse.data.success) {
            console.log('‚úÖ Token refreshed successfully! Retrying original request...');
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ emit event ‡πÄ‡∏°‡∏∑‡πà‡∏≠ refresh token ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            if (typeof window !== 'undefined') {
              window.dispatchEvent(new CustomEvent('auth:token-refreshed'));
            }
            
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï token ‡πÉ‡∏´‡∏°‡πà
            const newToken = Cookies.get('access_token');
            if (newToken) {
              error.config.headers.Authorization = `Bearer ${newToken}`;
            }
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            return axios(error.config);
          } else {
            console.log('‚ùå Token refresh failed with success=false');
            if (typeof window !== 'undefined') {
              window.location.href = '/login';
            }
            return Promise.reject(error);
          }
        } catch (refreshError) {
          console.error('‚ùå Error during token refresh:', refreshError);
          if (typeof window !== 'undefined') {
            window.location.href = '/login';
          }
          return Promise.reject(refreshError);
        }
      }
      
      return Promise.reject(error);
    }
  );
  
  return instance;
};

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö logging ‡πÅ‡∏•‡∏∞ error handling
const apiCall = async (method, endpoint, data = null) => {
  const api = createApiInstance();
  
  try {
    console.log(`üîÑ API Call: ${method.toUpperCase()} ${endpoint}`);
    console.time(`API ${method.toUpperCase()} ${endpoint}`);
    
    let response;
    const config = {};
    
    switch (method.toLowerCase()) {
      case 'get':
        response = await api.get(endpoint, config);
        break;
      case 'post':
        response = await api.post(endpoint, data, config);
        break;
      case 'put':
        response = await api.put(endpoint, data, config);
        break;
      case 'patch':
        response = await api.patch(endpoint, data, config);
        break;
      case 'delete':
        response = await api.delete(endpoint, config);
        break;
      default:
        throw new Error(`Unsupported HTTP method: ${method}`);
    }
    
    console.timeEnd(`API ${method.toUpperCase()} ${endpoint}`);
    console.log(`‚úÖ API Success: ${method.toUpperCase()} ${endpoint}`, response.data);
    
    return response.data;
  } catch (error) {
    console.timeEnd(`API ${method.toUpperCase()} ${endpoint}`);
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    if (error.response) {
      // Server responded with error status
      const errorMessage = error.response.data?.message || error.response.statusText || 'Server Error';
      console.error(`‚ùå API Error: ${method.toUpperCase()} ${endpoint}`, {
        status: error.response.status,
        message: errorMessage,
        data: error.response.data
      });
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á error object ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
      const apiError = new Error(errorMessage);
      apiError.status = error.response.status;
      apiError.response = error.response;
      throw apiError;
    } else if (error.request) {
      // Network error
      console.error(`‚ùå Network Error: ${method.toUpperCase()} ${endpoint}`, error.message);
      throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ');
    } else {
      // Other error
      console.error(`‚ùå API Error: ${method.toUpperCase()} ${endpoint}`, error.message);
      throw error;
    }
  }
};

// ============ Reviews API Functions ============

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÑ‡∏î‡πâ
 */
export async function getReviewableOrders() {
  try {
    const result = await apiCall('get', '/api/orders/reviewable');
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÑ‡∏î‡πâ',
      error
    };
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Review ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order
 * @param {Object} reviewData ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á
 * @param {string} reviewData.orderId ID ‡∏Ç‡∏≠‡∏á Order ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
 * @param {number} reviewData.rating ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à (1-5)
 * @param {string} reviewData.comment ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
 */
export async function createReview(reviewData) {
  try {
    // Validate reviewData
    if (!reviewData.orderId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Order ID');
    }
    
    if (!reviewData.rating || reviewData.rating < 1 || reviewData.rating > 5) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-5');
    }
    
    const data = {
      orderId: reviewData.orderId,
      rating: reviewData.rating,
      comment: reviewData.comment || ''
    };
    
    const result = await apiCall('post', '/api/reviews', data);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏™‡∏£‡πâ‡∏≤‡∏á Review ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Review',
      error
    };
  }
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
 * @param {string} reviewId ID ‡∏Ç‡∏≠‡∏á Review ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 * @param {Object} reviewData ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 * @param {number} reviewData.rating ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à (1-5)
 * @param {string} reviewData.comment ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
 */
export async function updateReview(reviewId, reviewData) {
  try {
    // Validate reviewData
    if (!reviewId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Review ID');
    }
    
    if (reviewData.rating && (reviewData.rating < 1 || reviewData.rating > 5)) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-5');
    }
    
    const data = {
      rating: reviewData.rating,
      comment: reviewData.comment
    };
    
    // ‡∏•‡∏ö property ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô undefined ‡∏≠‡∏≠‡∏Å
    Object.keys(data).forEach(key => data[key] === undefined && delete data[key]);
    
    const result = await apiCall('put', `/api/reviews/${reviewId}`, data);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ï‡∏≤‡∏° ID
 * @param {string} reviewId ID ‡∏Ç‡∏≠‡∏á Review
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review
 */
export async function getReviewById(reviewId) {
  try {
    if (!reviewId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Review ID');
    }
    
    const result = await apiCall('get', `/api/reviews/${reviewId}`);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
export async function getMyReviews() {
  try {
    const result = await apiCall('get', '/api/reviews/my-reviews');
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á Order
 * @param {string} orderId ID ‡∏Ç‡∏≠‡∏á Order
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á Order
 */
export async function getReviewByOrderId(orderId) {
  try {
    if (!orderId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Order ID');
    }
    
    const result = await apiCall('get', `/api/reviews/order/${orderId}`);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á Order ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á Order',
      error
    };
  }
}

/**
 * ‡∏•‡∏ö Review
 * @param {string} reviewId ID ‡∏Ç‡∏≠‡∏á Review ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö
 * @returns {Promise<Object>} ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏ö
 */
export async function deleteReview(reviewId) {
  try {
    if (!reviewId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Review ID');
    }
    
    const result = await apiCall('delete', `/api/reviews/${reviewId}`);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏•‡∏ö Review ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö Review',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Review ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Review
 */
export async function getReviewStats() {
  try {
    const result = await apiCall('get', '/api/reviews/stats');
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Review ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Review',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
 * @param {Object} options ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 * @param {number} options.page ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 1)
 * @param {number} options.limit ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Review ‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
 * @param {string} options.sortBy ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
 * @param {string} options.sortOrder ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á (asc ‡∏´‡∏£‡∏∑‡∏≠ desc)
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
export async function getAllReviews(options = {}) {
  try {
    // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å options
    const { 
      page = 1, 
      limit = 10, 
      sortBy = 'createdAt', 
      sortOrder = 'desc',
      isPublic,
      isDisplayed,  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå isDisplayed
      minRating,
      search
    } = options;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
    const params = {};
    
    // ‡πÉ‡∏™‡πà‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    params.page = page;
    params.limit = limit;
    params.sortBy = sortBy;
    params.sortOrder = sortOrder;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡πà‡∏≤
    if (isPublic !== undefined) {
      params.isPublic = isPublic;
    }
    
    if (isDisplayed !== undefined) {
      params.isDisplayed = isDisplayed;  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ isDisplayed
    }
    
    if (minRating !== undefined) {
      params.minRating = minRating;
    }
    
    if (search) {
      params.search = search;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á query string
    const queryParams = new URLSearchParams(params).toString();
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
    const result = await apiCall('get', `/api/reviews?${queryParams}`);
    
    return {
      success: true,
      data: result.data,
      pagination: result.pagination,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      error
    };
  }
}

// ============ Helper Functions ============

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Order ‡∏°‡∏µ Review ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 * @param {string} orderId ID ‡∏Ç‡∏≠‡∏á Order
 * @returns {Promise<boolean>} ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
 */
export async function hasOrderBeenReviewed(orderId) {
  try {
    if (!orderId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Order ID');
    }
    
    const result = await getReviewByOrderId(orderId);
    
    // ‡∏ñ‡πâ‡∏≤‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ Order ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß
    return result.success && !!result.data;
  } catch (error) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ Order ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
    return false;
  }
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á Review
 * @param {Array} reviews ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Review
 * @returns {number} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
 */
export function calculateAverageRating(reviews) {
  if (!reviews || !Array.isArray(reviews) || reviews.length === 0) {
    return 0;
  }
  
  const sum = reviews.reduce((total, review) => total + (review.rating || 0), 0);
  return parseFloat((sum / reviews.length).toFixed(1));
}

/**
 * ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô Review ‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏≤‡∏ß
 * @param {number} rating ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (1-5)
 * @returns {string} ‡∏™‡∏ï‡∏£‡∏¥‡∏á‡∏î‡∏≤‡∏ß (‚òÖ)
 */
export function ratingToStars(rating) {
  if (!rating || rating < 1 || rating > 5) {
    return '‚òÜ‚òÜ‚òÜ‚òÜ‚òÜ';
  }
  
  const fullStars = Math.floor(rating);
  const emptyStars = 5 - fullStars;
  
  return '‚òÖ'.repeat(fullStars) + '‚òÜ'.repeat(emptyStars);
}
/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞
 */
export async function getPublicReviews() {
  try {
    const result = await apiCall('get', '/api/reviews/public');
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô featured
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô featured
 */
export async function getFeaturedReviews() {
  try {
    const result = await apiCall('get', '/api/reviews/featured');
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô featured ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô featured',
      error
    };
  }
}

/**
 * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° ID (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
 * @param {string} userId ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
export async function getReviewsByUserId(userId) {
  try {
    if (!userId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ User ID');
    }
    
    const result = await apiCall('get', `/api/reviews/user/${userId}`);
    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
      error
    };
  }
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review ‡πÇ‡∏î‡∏¢ Admin
 * @param {string} reviewId ID ‡∏Ç‡∏≠‡∏á Review ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 * @param {Object} adminReviewData ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 * @param {number} [adminReviewData.rating] ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à (1-5)
 * @param {string} [adminReviewData.comment] ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
 * @param {boolean} [adminReviewData.isPublic] ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
 * @param {boolean} [adminReviewData.isFeatured] ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô featured
 * @returns {Promise<Object>} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Review ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
 */
export async function adminUpdateReview(reviewId, adminReviewData) {
  try {
    if (!reviewId) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Review ID');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
    if (adminReviewData.rating && (adminReviewData.rating < 1 || adminReviewData.rating > 5)) {
      throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-5');
    }
    
    const result = await apiCall('put', `/api/reviews/${reviewId}/admin`, adminReviewData);

    
    return {
      success: true,
      data: result.data,
      message: result.message || '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review ‡πÇ‡∏î‡∏¢ Admin ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };
  } catch (error) {
    return {
      success: false,
      message: error.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Review ‡πÇ‡∏î‡∏¢ Admin',
      error
    };
  }
}

// Export default object ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
export default {
  getReviewableOrders,
  createReview,
  updateReview,
  getReviewById,
  getMyReviews,
  getReviewByOrderId,
  deleteReview,
  getReviewStats,
  getAllReviews,
  hasOrderBeenReviewed,
  calculateAverageRating,
  ratingToStars,
  getPublicReviews,
  getFeaturedReviews,
  getReviewsByUserId,
  adminUpdateReview
};